// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eslintmessage.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EsLintRequest struct {
	FileContent          string   `protobuf:"bytes,1,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EsLintRequest) Reset()         { *m = EsLintRequest{} }
func (m *EsLintRequest) String() string { return proto.CompactTextString(m) }
func (*EsLintRequest) ProtoMessage()    {}
func (*EsLintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e87ba1c3f1982cf1, []int{0}
}

func (m *EsLintRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EsLintRequest.Unmarshal(m, b)
}
func (m *EsLintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EsLintRequest.Marshal(b, m, deterministic)
}
func (m *EsLintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EsLintRequest.Merge(m, src)
}
func (m *EsLintRequest) XXX_Size() int {
	return xxx_messageInfo_EsLintRequest.Size(m)
}
func (m *EsLintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EsLintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EsLintRequest proto.InternalMessageInfo

func (m *EsLintRequest) GetFileContent() string {
	if m != nil {
		return m.FileContent
	}
	return ""
}

type EsLintResponse struct {
	Errors               string   `protobuf:"bytes,1,opt,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EsLintResponse) Reset()         { *m = EsLintResponse{} }
func (m *EsLintResponse) String() string { return proto.CompactTextString(m) }
func (*EsLintResponse) ProtoMessage()    {}
func (*EsLintResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e87ba1c3f1982cf1, []int{1}
}

func (m *EsLintResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EsLintResponse.Unmarshal(m, b)
}
func (m *EsLintResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EsLintResponse.Marshal(b, m, deterministic)
}
func (m *EsLintResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EsLintResponse.Merge(m, src)
}
func (m *EsLintResponse) XXX_Size() int {
	return xxx_messageInfo_EsLintResponse.Size(m)
}
func (m *EsLintResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EsLintResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EsLintResponse proto.InternalMessageInfo

func (m *EsLintResponse) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func init() {
	proto.RegisterType((*EsLintRequest)(nil), "proto.EsLintRequest")
	proto.RegisterType((*EsLintResponse)(nil), "proto.EsLintResponse")
}

func init() { proto.RegisterFile("eslintmessage.proto", fileDescriptor_e87ba1c3f1982cf1) }

var fileDescriptor_e87ba1c3f1982cf1 = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x2d, 0xce, 0xc9,
	0xcc, 0x2b, 0xc9, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x62, 0x05, 0x53, 0x4a, 0x86, 0x5c, 0xbc, 0xae, 0xc5, 0x3e, 0x99, 0x79, 0x25, 0x41, 0xa9, 0x85,
	0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x0a, 0x5c, 0xdc, 0x69, 0x99, 0x39, 0xa9, 0xce, 0xf9, 0x79, 0x25,
	0xa9, 0x79, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0xc8, 0x42, 0x4a, 0x1a, 0x5c, 0x7c,
	0x30, 0x2d, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x62, 0x5c, 0x6c, 0xa9, 0x45, 0x45, 0xf9,
	0x45, 0xc5, 0x50, 0xe5, 0x50, 0x9e, 0x91, 0x07, 0xcc, 0xf0, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4,
	0x54, 0x21, 0x73, 0x2e, 0x0e, 0x10, 0xd7, 0x2d, 0x33, 0x27, 0x55, 0x48, 0x04, 0xe2, 0x10, 0x3d,
	0x14, 0xeb, 0xa5, 0x44, 0xd1, 0x44, 0x21, 0x36, 0x24, 0xb1, 0x81, 0x45, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x48, 0x30, 0x75, 0xa5, 0xcb, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EsLintServiceClient is the client API for EsLintService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EsLintServiceClient interface {
	LintFile(ctx context.Context, in *EsLintRequest, opts ...grpc.CallOption) (*EsLintResponse, error)
}

type esLintServiceClient struct {
	cc *grpc.ClientConn
}

func NewEsLintServiceClient(cc *grpc.ClientConn) EsLintServiceClient {
	return &esLintServiceClient{cc}
}

func (c *esLintServiceClient) LintFile(ctx context.Context, in *EsLintRequest, opts ...grpc.CallOption) (*EsLintResponse, error) {
	out := new(EsLintResponse)
	err := c.cc.Invoke(ctx, "/proto.EsLintService/LintFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EsLintServiceServer is the server API for EsLintService service.
type EsLintServiceServer interface {
	LintFile(context.Context, *EsLintRequest) (*EsLintResponse, error)
}

// UnimplementedEsLintServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEsLintServiceServer struct {
}

func (*UnimplementedEsLintServiceServer) LintFile(ctx context.Context, req *EsLintRequest) (*EsLintResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LintFile not implemented")
}

func RegisterEsLintServiceServer(s *grpc.Server, srv EsLintServiceServer) {
	s.RegisterService(&_EsLintService_serviceDesc, srv)
}

func _EsLintService_LintFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EsLintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EsLintServiceServer).LintFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.EsLintService/LintFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EsLintServiceServer).LintFile(ctx, req.(*EsLintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EsLintService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.EsLintService",
	HandlerType: (*EsLintServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LintFile",
			Handler:    _EsLintService_LintFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eslintmessage.proto",
}
